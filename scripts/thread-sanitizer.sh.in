#!/bin/bash

printUsage()
{
	echo ""
	echo "Usage: $0 input_file output_file <additional tsan options>"
	exit 1
}

# set up environment variables
last=$PWD
cd @ZIPR_LOCATION@
. set_env_vars
cd $last

if [[ "$#" -eq 1 && "$1" == "--help" ]];
then
    export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SECURITY_TRANSFORMS_HOME/lib"
	@PLUGIN_PATH@/tsan.exe --help
	
	echo ""
	echo ""
	echo "Additional wrapper script options:"
	echo "--clean                                   Remove the build and log folder after completion"
	echo "--copy-tsan-binaries                      Copy the thread sanitizer binaries at the start of the instrumentation"
	
	exit 1
fi

if [ "$#" -lt 2 ]
then
	printUsage
fi

# the basic run command without additional tsan options
inputbase=$(basename $1)
tempdir=tsan_temp.${inputbase}.$$
runCommand="$PSZ $1 $2 --tempdir ${tempdir} -c rida -c move_globals -o --elftables-only -o --no-use-stars --step-option zipr:\"--zipr:seed 42\" -c tsan -o --register-analysis=custom"

# add tsan options to the run command
i=$(($#-3))
removeTempFolder=false
copyTsanBinaries=false
while [ $i -ge 0 ];
do
    if [[ "${BASH_ARGV[$i]}" == "--clean" ]];
    then
        removeTempFolder=true
    elif [[ "${BASH_ARGV[$i]}" == "--copy-tsan-binaries" ]];
    then
        copyTsanBinaries=true
    else
        runCommand="${runCommand} -o ${BASH_ARGV[$i]}"
    fi
    i=$((i-1))
done

if [[ "$copyTsanBinaries" == false ]]; then
    export PSPATH=$PSPATH:@PLUGIN_PATH@
    export ZIPR_PLUGIN_PATH=$ZIPR_PLUGIN_PATH:@ZIPR_PLUGIN_PATH@
else
    tsanPSPATHCopyDir=$(pwd)/tsan_pspath_copy_temp.${inputbase}.$$
    tsanPluginCopyDir=$(pwd)/tsan_plugin_copy_temp.${inputbase}.$$
    export PSPATH=$PSPATH:$tsanPSPATHCopyDir
    export ZIPR_PLUGIN_PATH=$ZIPR_PLUGIN_PATH:$tsanPluginCopyDir
    
    cp -r @PLUGIN_PATH@ $tsanPSPATHCopyDir
    cp -r @ZIPR_PLUGIN_PATH@ $tsanPluginCopyDir
fi

# run the binary tsan
eval $runCommand

# copy and rename instrumentation info file
if [ $? -eq 0 ]
then
    outputbase=$(basename $2)
    cp ${tempdir}/tsan-instrumentation-info.dat ${outputbase}.instrinfo
fi

if [[ "$removeTempFolder" == true ]]; then
    rm -r ${tempdir}
fi

if [[ "$copyTsanBinaries" == true ]]; then
    rm -r $tsanPSPATHCopyDir
    rm -r $tsanPluginCopyDir
fi
